#!/bin/bash
DIR=$(cd $(dirname "$0"); pwd)
cd $DIR

rm -f initrd.img zImage boot.img
rm -f -r ramdisk-contents

if [ ! $1 ]
	then
		cp -f ../../input/boot.img ./boot.img
	else
		cp -f $1 ./boot.img
fi

if [ ! -e boot.img ]
	then
		echo "boot.img not found :( "
		exit
fi


##############this section vvv needs review##########

echo "================================"
echo "now we will save the base and cmdline of this boot.img so that you can use it later"
echo "This configuration file will be required to create new boot.img for this device later"
echo "Type the name with which you want to save configuration and press [Enter] to save it"
read BOOT_CONFIG_NAME
touch $BOOT_CONFIG_NAME.cfg
BASE="0x$(od -A n -h -j 34 -N 2 ./boot.img|sed 's/ //g')0000"
CMDLINE="$(od -A n --strings -j 64 -N 512 ./boot.img)"

echo "BASE=$BASE" >> $BOOT_CONFIG_NAME.cfg
echo "CMDLINE=$CMDLINE" >> $BOOT_CONFIG_NAME.cfg

cp -f $BOOT_CONFIG_NAME.cfg ./bootimg-configs/$BOOT_CONFIG_NAME
##########################################################
./split_bootimg.pl boot.img

mkdir -p ramdisk-contents
cd ramdisk-contents
gunzip -c ../boot.img-ramdisk.gz | cpio -i
cd ..
mkdir -p bootimg-contents
mv -f boot.img-kernel bootimg-contents/zImage
mv -f boot.img-ramdisk.gz bootimg-contents/initrd.img
if [ -e boot.img-second.gz ]
then
	mv -f boot.img-second.gz bootimg-contents/second.img
fi
mv -f ramdisk-contents bootimg-contents/ramdisk-contents
mv -f $BOOT_CONFIG_NAME.cfg bootimg-contents/.
rm -f -r ../../output/bootimg-contents
rm -f boot.img
mv -f bootimg-contents ../../output/.
echo "Find zImage, initrd.img, $BOOT_CONFIG_NAME.cfg and ramdisk-contents inside 'bootimg-contents' in output folder"
